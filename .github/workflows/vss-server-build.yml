name: vss-server-build

on: [push]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: testpassword
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: jooq-up

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: release-candidate

      - name: Create database table
        run: |
          #psql -h localhost -U postgres -d postgres -c "CREATE TABLE vss_db (store_id character varying(120) NOT NULL CHECK (store_id <> ''), key character varying(120) NOT NULL, value bytea NULL, version bigint NOT NULL, PRIMARY KEY (store_id, key));"
          ls
          psql -h localhost -U postgres -d postgres -f ./app/src/main/java/org/vss/impl/postgres/sql/v0_create_vss_db.sql
        env:
          PGPASSWORD: testpassword

      - name: Build and deploy service
        run: |
          java -version
          gradle --version

          cd vss-server
          gradle wrapper --gradle-version 8.1.1
          ./gradlew --version
          ./gradlew build

          docker run -d --network=host --name tomcat tomcat:latest
          docker cp app/build/libs/app-1.0.war tomcat:/usr/local/tomcat/webapps/vss.war
      - name: Run tests
        run: |
          curl --request POST --data-binary "s" http://localhost:8080/vss/getObject

      - name: Cleanup
        run: |
          # Cleanup after tests if needed
